// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"time"
)

// Defines values for ErrorError.
const (
	AccessDenied            ErrorError = "access_denied"
	Conflict                ErrorError = "conflict"
	Forbidden               ErrorError = "forbidden"
	InvalidClient           ErrorError = "invalid_client"
	InvalidGrant            ErrorError = "invalid_grant"
	InvalidRequest          ErrorError = "invalid_request"
	InvalidScope            ErrorError = "invalid_scope"
	MethodNotAllowed        ErrorError = "method_not_allowed"
	NotFound                ErrorError = "not_found"
	ServerError             ErrorError = "server_error"
	TemporarilyUnavailable  ErrorError = "temporarily_unavailable"
	UnauthorizedClient      ErrorError = "unauthorized_client"
	UnsupportedGrantType    ErrorError = "unsupported_grant_type"
	UnsupportedMediaType    ErrorError = "unsupported_media_type"
	UnsupportedResponseType ErrorError = "unsupported_response_type"
)

// Defines values for ResourceHealthStatus.
const (
	ResourceHealthStatusDegraded ResourceHealthStatus = "degraded"
	ResourceHealthStatusError    ResourceHealthStatus = "error"
	ResourceHealthStatusHealthy  ResourceHealthStatus = "healthy"
	ResourceHealthStatusUnknown  ResourceHealthStatus = "unknown"
)

// Defines values for ResourceProvisioningStatus.
const (
	ResourceProvisioningStatusDeprovisioning ResourceProvisioningStatus = "deprovisioning"
	ResourceProvisioningStatusError          ResourceProvisioningStatus = "error"
	ResourceProvisioningStatusProvisioned    ResourceProvisioningStatus = "provisioned"
	ResourceProvisioningStatusProvisioning   ResourceProvisioningStatus = "provisioning"
	ResourceProvisioningStatusUnknown        ResourceProvisioningStatus = "unknown"
)

// Error Generic error message, compatible with oauth2.
type Error struct {
	// Error A terse error string expanding on the HTTP error code. Errors are based on the OAuth 2.02 specification, but are expanded with proprietary status codes for APIs other than those specified by OAuth 2.02.
	Error ErrorError `json:"error"`

	// ErrorDescription Verbose message describing the error.
	ErrorDescription string `json:"error_description"`
}

// ErrorError A terse error string expanding on the HTTP error code. Errors are based on the OAuth 2.02 specification, but are expanded with proprietary status codes for APIs other than those specified by OAuth 2.02.
type ErrorError string

// KubernetesLabelValue A valid Kubernetes label value, typically used for resource names that can be
// indexed in the database.
type KubernetesLabelValue = string

// OrganizationScopedResourceReadMetadata defines model for organizationScopedResourceReadMetadata.
type OrganizationScopedResourceReadMetadata struct {
	// CreatedBy The user who created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// CreationTime The time the resource was created.
	CreationTime time.Time `json:"creationTime"`

	// DeletionTime The time the resource was deleted.
	DeletionTime *time.Time `json:"deletionTime,omitempty"`

	// Description The resource description, this optionally augments the name with more context.
	Description *string `json:"description,omitempty"`

	// HealthStatus The health state of a resource.
	HealthStatus ResourceHealthStatus `json:"healthStatus"`

	// Id The unique resource ID.
	Id string `json:"id"`

	// ModifiedBy The user who updated the resource.
	ModifiedBy *string `json:"modifiedBy,omitempty"`

	// ModifiedTime The time a resource was updated.
	ModifiedTime *time.Time `json:"modifiedTime,omitempty"`

	// Name A valid Kubernetes label value, typically used for resource names that can be
	// indexed in the database.
	Name KubernetesLabelValue `json:"name"`

	// OrganizationId The organization identifier the resource belongs to.
	OrganizationId string `json:"organizationId"`

	// ProvisioningStatus The provisioning state of a resource.
	ProvisioningStatus ResourceProvisioningStatus `json:"provisioningStatus"`

	// Tags A list of tags.
	Tags *TagList `json:"tags,omitempty"`
}

// ProjectScopedResourceReadMetadata defines model for projectScopedResourceReadMetadata.
type ProjectScopedResourceReadMetadata struct {
	// CreatedBy The user who created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// CreationTime The time the resource was created.
	CreationTime time.Time `json:"creationTime"`

	// DeletionTime The time the resource was deleted.
	DeletionTime *time.Time `json:"deletionTime,omitempty"`

	// Description The resource description, this optionally augments the name with more context.
	Description *string `json:"description,omitempty"`

	// HealthStatus The health state of a resource.
	HealthStatus ResourceHealthStatus `json:"healthStatus"`

	// Id The unique resource ID.
	Id string `json:"id"`

	// ModifiedBy The user who updated the resource.
	ModifiedBy *string `json:"modifiedBy,omitempty"`

	// ModifiedTime The time a resource was updated.
	ModifiedTime *time.Time `json:"modifiedTime,omitempty"`

	// Name A valid Kubernetes label value, typically used for resource names that can be
	// indexed in the database.
	Name KubernetesLabelValue `json:"name"`

	// OrganizationId The organization identifier the resource belongs to.
	OrganizationId string `json:"organizationId"`

	// ProjectId The project identifier the resource belongs to.
	ProjectId string `json:"projectId"`

	// ProvisioningStatus The provisioning state of a resource.
	ProvisioningStatus ResourceProvisioningStatus `json:"provisioningStatus"`

	// Tags A list of tags.
	Tags *TagList `json:"tags,omitempty"`
}

// ResourceHealthStatus The health state of a resource.
type ResourceHealthStatus string

// ResourceMetadata Metadata required for all API resource reads and writes.
type ResourceMetadata struct {
	// Description The resource description, this optionally augments the name with more context.
	Description *string `json:"description,omitempty"`

	// Name A valid Kubernetes label value, typically used for resource names that can be
	// indexed in the database.
	Name KubernetesLabelValue `json:"name"`

	// Tags A list of tags.
	Tags *TagList `json:"tags,omitempty"`
}

// ResourceProvisioningStatus The provisioning state of a resource.
type ResourceProvisioningStatus string

// ResourceReadMetadata defines model for resourceReadMetadata.
type ResourceReadMetadata struct {
	// CreatedBy The user who created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// CreationTime The time the resource was created.
	CreationTime time.Time `json:"creationTime"`

	// DeletionTime The time the resource was deleted.
	DeletionTime *time.Time `json:"deletionTime,omitempty"`

	// Description The resource description, this optionally augments the name with more context.
	Description *string `json:"description,omitempty"`

	// HealthStatus The health state of a resource.
	HealthStatus ResourceHealthStatus `json:"healthStatus"`

	// Id The unique resource ID.
	Id string `json:"id"`

	// ModifiedBy The user who updated the resource.
	ModifiedBy *string `json:"modifiedBy,omitempty"`

	// ModifiedTime The time a resource was updated.
	ModifiedTime *time.Time `json:"modifiedTime,omitempty"`

	// Name A valid Kubernetes label value, typically used for resource names that can be
	// indexed in the database.
	Name KubernetesLabelValue `json:"name"`

	// ProvisioningStatus The provisioning state of a resource.
	ProvisioningStatus ResourceProvisioningStatus `json:"provisioningStatus"`

	// Tags A list of tags.
	Tags *TagList `json:"tags,omitempty"`
}

// ResourceWriteMetadata Metadata required for all API resource reads and writes.
type ResourceWriteMetadata = ResourceMetadata

// Semver A semantic version in the form v1.2.3.
// Pre-releases and variants are not currently supported.
type Semver = string

// StaticResourceMetadata defines model for staticResourceMetadata.
type StaticResourceMetadata struct {
	// CreatedBy The user who created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`

	// CreationTime The time the resource was created.
	CreationTime time.Time `json:"creationTime"`

	// Description The resource description, this optionally augments the name with more context.
	Description *string `json:"description,omitempty"`

	// Id The unique resource ID.
	Id string `json:"id"`

	// ModifiedBy The user who updated the resource.
	ModifiedBy *string `json:"modifiedBy,omitempty"`

	// ModifiedTime The time a resource was updated.
	ModifiedTime *time.Time `json:"modifiedTime,omitempty"`

	// Name A valid Kubernetes label value, typically used for resource names that can be
	// indexed in the database.
	Name KubernetesLabelValue `json:"name"`

	// Tags A list of tags.
	Tags *TagList `json:"tags,omitempty"`
}

// Tag A tag mapping arbitrary names to values.  These have no special meaning
// for any component are are intended for use by end users to add additional
// context to a resource, for example to categorize it.
type Tag struct {
	// Name A unique tag name.
	Name string `json:"name"`

	// Value The value of the tag.
	Value string `json:"value"`
}

// TagList A list of tags.
type TagList = []Tag

// BadRequestResponse Generic error message, compatible with oauth2.
type BadRequestResponse = Error

// ConflictResponse Generic error message, compatible with oauth2.
type ConflictResponse = Error

// ForbiddenResponse Generic error message, compatible with oauth2.
type ForbiddenResponse = Error

// InternalServerErrorResponse Generic error message, compatible with oauth2.
type InternalServerErrorResponse = Error

// NotFoundResponse Generic error message, compatible with oauth2.
type NotFoundResponse = Error

// UnauthorizedResponse Generic error message, compatible with oauth2.
type UnauthorizedResponse = Error
