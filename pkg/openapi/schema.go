// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
