// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
