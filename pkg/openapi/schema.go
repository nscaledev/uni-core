// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
