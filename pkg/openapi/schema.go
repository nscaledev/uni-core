// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
