// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xYbW8byQ3+K8T0gLboWsndtQWqLwf33WiLCxz3ijZKBe4O15pklrOZF9mKof9ecGYl",
	"reRVkjv7Y7/Y2h0Oh3zIh+Tsg2pc1zsmjkHNH5Sn0DsOlB+waaiPpK+Hl/JOU2i86aNxrObqZkXg6UOi",
	"EGGFAWoiht02QNZwZ6yFmqBNtjXWytuw4WblHbsU7Ga24H+7BB1uoHfWQswag0u+oaygc2yi82BigBAx",
	"pgCt8yBmWxIzZmpbqRr1dbFjbGzjOBLH7EvfW9OgbHjxLojxD4ruUZTkn947r+bK8Bqt0cvBKVWVleWx",
	"2zuXa6c3MGwRK0Kzog5F31eeWjVXP3txgPdFWQ0vylnb7bY6QfN6rLZFI2iVTZCPyNZX4PyAUpHWjgKw",
	"iyDeouEF4x7HD8l40tAasjpkoBrHrTXNE2HaaTmDDx5CeGfiKhsTsCNg+YPWE+oN0L0JMTwLbsNhO7NC",
	"ORbZxRX5ClJIaO0G4soE6Ag5iEkbWOGajo3LGLXO10Zr4qeBtFdzBqUUyEPjSRNHgzaAdjmOe6v28eu9",
	"WRtLtxSeMcvuMIAmNqSh3gCmuHLehCHHClK4Eeo2mEIREqOOBBcc3XvindmGb48ND43rKfMVGS5fXe2T",
	"N/sumcs/Pzi8YKaGQkC/GbkMjvOW3ru10eShtxhb57scK8ORPKN9TX5N/k/i9NOiFrKiZXmcDtxAzeig",
	"eN9YNN0zROaSITHd99RI9cxi4JomeU/6OCR4JBk9cjDEcdiDrBcskiE1DZEWBIWS0W9mcNUWTSZDL8A2",
	"GKiC3hIGCV3vfAQTAYMcY0JIhRXs4p9dYv00eNnFZStqzmA7qmykD2VkX+Ry0XgGrP/JWFuSGLaGNRwq",
	"VvY18ZDmH+mJ/kozDGFZiHauXKa4khpQtA2V/znyaUrvjoHFsCGDpXfTfS+cnant/uQw8uS09f+FmLxp",
	"hpTrhLa3VOW+jNEItrkGO3Hum5mqVO9dTz4a+pTWS4jkAw1aQ/RSUui+R9byaygFf725eTWINE7TDDLv",
	"A6AnqDGUjBfB7wWCbyD01Jh2wKGCOsUsWvSSLpaKfd5QlOozDBqivIwbl6+uAuRuAnGFotwF2uktxbGc",
	"JZ4Sp07N30wME+O8WjZWOKuqRzmSOKReaEiyt2TfMm56UtVeZ66sqjotV5G63nn0xm6WiXGNxkqejzbu",
	"T929uPXI8eTU/G535Jiyo8bfUVw5vZRVtNbdPTK9I21wp+TQDN9WKr+bqxJeSfQJVpxmxg/ka8F8yDQo",
	"q/Wu5WQNAv6J7m2ldt1IQnK+rB/McvU7anKNeZ9q8kyRwt+xJvsD2kRTOZuBhL+lmrIwWJGWt4kqiJve",
	"NHn8yG1Usmlf1mTkkFkEIzTIUNOCDWu6Jw2mZLDGiJLSmUEYpdmpufrvm5cXv7u8+A9efHz7i+/mh6eL",
	"5eztw8vqt19vRxK//O4rNQG687fI5mMmxWtJJ70bpK4J9T8oohyea52137dq/ubTdchP7d5WDyfMHx97",
	"pafvFGMZMHlAag3549tBTdbxrZSwz8f95NDHwX67zRVKHp4Diy/E9jE6gw3ngBmWnwWTw1HTcOyUjr0/",
	"M3h3g8jAhDzwWStV82CaDP2h3Am9iRQe94RP8v9m7OZoaRiMXH7INMN020kwMjL5xpHre+d8viFEuo+z",
	"KT6I6Od67WRFOAU2Kxoj+EpG12AcG759nVvL2eju5XIPInDt0WxyaC6J37O74wLiftf4MRdkTSfLpQJO",
	"FWH/pIwXc01zfZozjzNcU7m335juzBeFaDo6TutyV7EUZT7JzaTDqOZKY6QLEZ+KZz+J+pdUsIl4TZDn",
	"VGSCRdWPJEzmyGwcjH8JV/7PwJ/KwEDdmibnzEAdymwMa/Ihf0Y6arDrxUL/arGYjf5NNtEzaf+jm+Yn",
	"CNN4wkj695vpkOSr9N3KwSB3xJxJmLPgT2DgcMCXM9Cc6WKJzYc0Un71x893K5PHz7HlX8C3m/LBZ6CG",
	"CUfT1zB4vUthuFZWmRvaycV4OHrByJvjuiwyK0IbV8M1oVwoZPZrTYTWuw5QllhjHvQXvLegwDZbsHpk",
	"+zZ/zGidIBZNlFuk+oPrOpc/nMgUWQg7pKuaq5ezr2e//k2e5Hpi7I2aq29nL2fflkxeSfJst/8LAAD/",
	"/zeu5m7iFQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
