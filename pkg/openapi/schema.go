// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
