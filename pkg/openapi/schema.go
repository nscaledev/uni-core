// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
