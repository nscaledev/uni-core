// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AP//4ZGr91AYAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
