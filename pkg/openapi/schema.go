// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"ELxhOXa7/wYAAP//kgMpq90aAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
