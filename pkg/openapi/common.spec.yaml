openapi: 3.0.3
info:
  title: Common API types.
  version: 0.1.45
paths: {}
components:
  schemas:
    error:
      description: Generic error message, compatible with oauth2.
      type: object
      required:
      - error
      - error_description
      properties:
        error:
          description: A terse error string expanding on the HTTP error code. Errors are based on the OAuth 2.02 specification, but are expanded with proprietary status codes for APIs other than those specified by OAuth 2.02.
          type: string
          enum:
          # Defined by OAuth 2.02
          - invalid_request
          - unauthorized_client
          - access_denied
          - unsupported_response_type
          - invalid_scope
          - server_error
          - temporarily_unavailable
          - invalid_client
          - invalid_grant
          - unsupported_grant_type
          # Proprietary
          - not_found
          - conflict
          - method_not_allowed
          - unsupported_media_type
          - forbidden
        error_description:
          description: Verbose message describing the error.
          type: string
    kubernetesLabelValue:
      description: |-
        A valid Kubernetes label value, typically used for resource names that can be
        indexed in the database.
      type: string
      pattern: '^[0-9A-Za-z](?:[0-9A-Za-z-_.]{0,61}[0-9A-Za-z])?$'
    semver:
      description: |-
        A semantic version in the form v1.2.3.
        Pre-releases and variants are not currently supported.
      type: string
      pattern: '^v\d+\.\d+\.\d+$'
    tag:
      description: |-
        A tag mapping arbitrary names to values.  These have no special meaning
        for any component are are intended for use by end users to add additional
        context to a resource, for example to categorize it.
      type: object
      required:
      - name  
      - value 
      properties:
        name: 
          description: A unique tag name.
          type: string
        value:
          description: The value of the tag.
          type: string
    tagList:
      description: A list of tags.
      type: array
      items:    
        $ref: '#/components/schemas/tag'
    resourceMetadata:
      description: Metadata required for all API resource reads and writes.
      required:
      - name
      properties:
        name:
          $ref: '#/components/schemas/kubernetesLabelValue'
        description:
          description: |-
            The resource description, this optionally augments the name with more context.
          type: string
        tags:
          $ref: '#/components/schemas/tagList'
    staticResourceMetadata:
      description: |
        This metadata is for resources that just exist, and don't require
        any provisioning and health status, but benefit from a standardized
        metadata format.
      type: object
      allOf:
      - $ref: '#/components/schemas/resourceMetadata'
      - type: object
        required:
        - id
        - creationTime
        properties:
          id:
            description: The unique resource ID.
            type: string
          creationTime:
            description: The time the resource was created.
            type: string
            format: date-time
          createdBy:
            description: The user who created the resource.
            type: string
          modifiedTime:
            description: The time a resource was updated.
            type: string
            format: date-time
          modifiedBy:
            description: The user who updated the resource.
            type: string
    resourceProvisioningStatus:
      description: The provisioning state of a resource.
      type: string
      enum:
      - unknown
      - provisioning
      - provisioned
      - deprovisioning
      - error
    resourceHealthStatus:
      description: The health state of a resource.
      type: string
      enum:
      - unknown
      - healthy
      - degraded
      - error
    resourceReadMetadata:
      description: Metadata required by all resource reads.
      allOf:
      - $ref: '#/components/schemas/staticResourceMetadata'
      - type: object
        required:
        - provisioningStatus
        - healthStatus
        properties:
          deletionTime:
            description: The time the resource was deleted.
            type: string
            format: date-time
          provisioningStatus:
            $ref: '#/components/schemas/resourceProvisioningStatus'
          healthStatus:
            $ref: '#/components/schemas/resourceHealthStatus'
    organizationScopedResourceReadMetadata:
      description: Metadata required by organization scoped resource reads.
      allOf:
      - $ref: '#/components/schemas/resourceReadMetadata'
      - type: object
        required:
        - organizationId
        properties:
          organizationId:
            description: The organization identifier the resource belongs to.
            type: string
    projectScopedResourceReadMetadata:
      description: Metadata required by project scoped resource reads.
      allOf:
      - $ref: '#/components/schemas/organizationScopedResourceReadMetadata'
      - type: object
        required:
        - projectId
        properties:
          projectId:
            description: The project identifier the resource belongs to.
            type: string
    resourceWriteMetadata:
      $ref: '#/components/schemas/resourceMetadata'
  responses:
    acceptedResponse:
      description: |-
        The request has been accepted and will be fulfilled asynchronously.
        You may poll the resource and monitor its provisioning and health status
        to await completion of the operation.
    badRequestResponse:
      description: |-
        Request body failed schema validation, or the request does not contain
        all the required fields.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            error: invalid_request
            error_description: request body invalid
    unauthorizedResponse:
      description: |-
        Authentication failed or the access token has expired.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            error: access_denied
            error_description: authentication failed
    forbiddenResponse:
      description: |-
        Request was denied by authorization, this may be caused by the authorization
        token not having the required scope for an API, or the user doesn't have the
        necessary privileges on the provider platform.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            error: forbidden
            error_description: user credentials do not have the required privileges
    notFoundResponse:
      description: |-
        Unable to find a resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            error: not_found
            error_description: the requested resource does not exist
    conflictResponse:
      description: |-
        Resource conflicts with another, usually this means they have the same name.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            error: conflict
            error_description: a resource with the same name already exists
    internalServerErrorResponse:
      description: |-
        An unexpected or unhandled error occurred. This may be a transient error and
        may succeed on a retry.  If this isn't the case, please report it as an issue.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          example:
            error: server_error
            error_description: failed to token claim
