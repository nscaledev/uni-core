---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: helmapplications.unikorn-cloud.org
spec:
  group: unikorn-cloud.org
  names:
    categories:
    - unikorn
    kind: HelmApplication
    listKind: HelmApplicationList
    plural: helmapplications
    singular: helmapplication
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.labels['unikorn-cloud\.org/name']
      name: display name
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HelmApplication defines a Helm application.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              documentation:
                description: Documentation defines a URL to 3rd party documentation.
                type: string
              icon:
                description: Icon is a base64 encoded icon for the application.
                format: byte
                type: string
              license:
                description: License describes the licence the application is released
                  under.
                type: string
              tags:
                description: Tags are aribrary user data.
                items:
                  description: Tag is an arbirary key/value.
                  properties:
                    name:
                      description: Name of the tag.
                      type: string
                    value:
                      description: Value of the tag.
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
              versions:
                description: Versions are the application versions that are supported.
                items:
                  properties:
                    branch:
                      description: Branch defines the branch name if the repo is a
                        git repository.
                      type: string
                    chart:
                      description: Chart is the chart name in the repository.
                      type: string
                    createNamespace:
                      description: |-
                        CreateNamespace indicates whether the chart requires a namespace to be
                        created by the tooling, rather than the chart itself.
                        If not set, uses the application default.
                      type: boolean
                    dependencies:
                      description: |-
                        Dependencies capture hard dependencies on other applications that must
                        be installed before this one.
                      items:
                        properties:
                          constraints:
                            description: |-
                              Constraints is a set of versioning constraints that must be met
                              by a SAT solver.
                            type: string
                          name:
                            description: Name of the application to depend on.
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    namespace:
                      description: Namespace is the namespace to install the application
                        to.
                      type: string
                    parameters:
                      description: |-
                        Parameters is a set of static --set parameters to pass to the chart.
                        If not set, uses the application default.
                      items:
                        properties:
                          name:
                            description: Name is the name of the parameter.
                            minLength: 1
                            type: string
                          value:
                            description: Value is the value of the parameter.
                            minLength: 1
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    path:
                      description: Path is the path if the repo is a git repository.
                      type: string
                    recommends:
                      description: |-
                        Recommends capture soft dependencies on other applications that may be
                        installed after this one. Typically ths could be storage classes for a
                        storage provider etc.
                      items:
                        properties:
                          name:
                            description: |-
                              Name of the application to require.
                              That recommendation MUST have a dependency with any constraints
                              on this application.
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    release:
                      description: |-
                        Release is the explicit release name for when chart resource names are dynamic.
                        Typically we need predicatable names for things that are going to be remote
                        clusters to derive endpoints or Kubernetes configurations.
                        If not set, uses the application default.
                      type: string
                    repo:
                      description: Repo is either a Helm chart repository, or git
                        repository.
                      type: string
                    serverSideApply:
                      description: |-
                        ServerSideApply allows you to bypass using kubectl apply.  This is useful
                        in situations where CRDs are too big and blow the annotation size limit.
                        We'd like to have this on by default, but mutating admission webhooks and
                        controllers modifying the spec mess this up.
                        If not set, uses the application default.
                      type: boolean
                    version:
                      description: |-
                        Version is the chart version, but must also be set for Git based repositories.
                        This value must be a semantic version.
                      pattern: ^v?[0-9]+(\.[0-9]+)?(\.[0-9]+)?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?$
                      type: string
                  required:
                  - repo
                  - version
                  type: object
                  x-kubernetes-validations:
                  - message: either chart or branch must be specified
                    rule: has(self.chart) || has(self.branch)
                  - message: only one of chart or branch may be specified
                    rule: '!(has(self.chart) && has(self.branch))'
                type: array
            required:
            - documentation
            - icon
            - license
            type: object
          status:
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
