// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package openapi

import (
	"time"
)

// Defines values for ResourceProvisioningStatus.
const (
	Deprovisioning ResourceProvisioningStatus = "deprovisioning"
	Error          ResourceProvisioningStatus = "error"
	Provisioned    ResourceProvisioningStatus = "provisioned"
	Provisioning   ResourceProvisioningStatus = "provisioning"
	Unknown        ResourceProvisioningStatus = "unknown"
)

// KubernetesLabelValue A valid Kubenetes label value, typically used for resource names that can be
// indexed in the database.
type KubernetesLabelValue = string

// ResourceMetadata Resource metadata valid for all API resource reads and writes.
type ResourceMetadata struct {
	// Description The resource description, this optionally augments the name with more context.
	Description *string `json:"description,omitempty"`

	// Name A valid Kubenetes label value, typically used for resource names that can be
	// indexed in the database.
	Name KubernetesLabelValue `json:"name"`
}

// ResourceProvisioningStatus The provisioning state of a resource.
type ResourceProvisioningStatus string

// ResourceReadMetadata defines model for resourceReadMetadata.
type ResourceReadMetadata struct {
	// CreationTime The time the resource was created.
	CreationTime time.Time `json:"creationTime"`

	// DeletionTime The time the resource was deleted.
	DeletionTime *time.Time `json:"deletionTime,omitempty"`

	// Description The resource description, this optionally augments the name with more context.
	Description *string `json:"description,omitempty"`

	// Id The unique resource ID.
	Id string `json:"id"`

	// Name A valid Kubenetes label value, typically used for resource names that can be
	// indexed in the database.
	Name KubernetesLabelValue `json:"name"`

	// ProvisioningStatus The provisioning state of a resource.
	ProvisioningStatus ResourceProvisioningStatus `json:"provisioningStatus"`
}

// ResourceWriteMetadata Resource metadata valid for all API resource reads and writes.
type ResourceWriteMetadata = ResourceMetadata
